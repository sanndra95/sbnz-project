package drools.spring.rules

import com.example.sbnz.model.*;
import com.example.sbnz.utils.*;
import java.util.*;

rule "Prehlada"
	no-loop
	lock-on-active true
	salience($dp.priority)
	when
		$d: Disease(name == "Prehlada")
		$mr: MedicalRecord(disease == null, $symptoms: symptoms)
		$dp: DiseasePriority($p: priority >= 4) from accumulate(
			$s: Symptom (
				name == "Curenje iz nosa" ||
				name == "Bol u grlu" ||
				name == "Glavobolja" ||
				name == "Kijanje" ||
				name == "Kasalj"
			) from $symptoms,
			init(DiseasePriority $priority = new DiseasePriority(5);),
			action($priority.addSymptom();),
			result($priority)
		)
	then
		modify($mr){setDisease($d);}
		System.out.println("Detektovana bolest: Prehlada");
end

rule "Groznica"
	no-loop
	lock-on-active true
	salience($dp.priority)
	when
		$d: Disease(name == "Groznica")
		$mr: MedicalRecord(disease == null, $symptoms: symptoms)
		$dp: DiseasePriority($p: priority >= 4) from accumulate(
			$s: Symptom (
				name == "Kijanje" ||
				name == "Bol u grlu" ||
				name == "Kasalj" ||
				name == "Temperatura veca od 38C" ||
				name == "Curenje iz nosa" ||
				name == "Glavobolja" ||
				name == "Drhtavica"
			) from $symptoms,
			init(DiseasePriority $priority = new DiseasePriority(7);),
			action($priority.addSymptom();),
			result($priority)
		)
	then
		modify($mr){setDisease($d);}
		System.out.println("Detektovana bolest: Groznica");
end

rule "Upala krajnika"
	no-loop
	lock-on-active true
	salience($dp.priority)
	when
		$d: Disease(name == "Upala krajnika")
		$mr: MedicalRecord(disease == null, $symptoms: symptoms)
		$dp: DiseasePriority($p: priority >= 4) from accumulate(
			$s: Symptom (
				name == "Bol u grlu" ||
				name == "Bol koji se siri do usiju" ||
				name == "Glavobolja" ||
				name == "Temperatura od 40C do 41C" ||
				name == "Drhtavica" ||
				name == "Gubitak apetita" ||
				name == "Umor" ||
				name == "Zuti sekret iz nosa"
			) from $symptoms,
			init(DiseasePriority $priority = new DiseasePriority(8);),
			action($priority.addSymptom();),
			result($priority)
		)
	then
		modify($mr){setDisease($d);}
		System.out.println("Detektovana bolest: Upala krajnika");
end

rule "Sinusna infekcija"
	no-loop
	lock-on-active true
	salience($dp.priority)
	when
		$d: Disease(name == "Sinusna infekcija")
		$mr: MedicalRecord(disease == null, $symptoms: symptoms)
		$dp: DiseasePriority($p: priority >= 4) from accumulate(
			$s: Symptom (
				name == "Oticanje oko ociju" ||
				name == "Glavobolja" ||
				name == "Zuti sekret iz nosa" ||
				name == "Bol u grlu" ||
				name == "Temperatura veca od 38C" ||
				name == "Kasalj"
			) from $symptoms,
			init(DiseasePriority $priority = new DiseasePriority(6);),
			action($priority.addSymptom();),
			result($priority)
		)
	then
		modify($mr){setDisease($d);}
		System.out.println("Detektovana bolest: Sinusna infekcija");
end


rule "Sinusna infekcija - specijalni zahtev"
	no-loop
	salience($dp.priority + 1)
	when
		$d: Disease(name == "Sinusna infekcija")
		$mr: MedicalRecord(disease == null, $symptoms: symptoms)
		$patient: Patient($records: records)
		$tc: TimeCheck()
		$d1: Disease(name == "Prehlada")
		$d2: Disease(name == "Groznica")
		
		Number(intValue >= 1) from accumulate(
			$r: MedicalRecord (
				disease == $d1 ||
				disease == $d2,
				date >= $tc.last60Days()
			) from $records,
			init(int count = 0;),
			action(count++;),
			result(count)
		)
		
		$dp: DiseasePriority($p: priority >= 3) from accumulate(
			$s: Symptom (
				name == "Oticanje oko ociju" ||
				name == "Glavobolja" ||
				name == "Zuti sekret iz nosa" ||
				name == "Bol u grlu" ||
				name == "Temperatura veca od 38C" ||
				name == "Kasalj"
			) from $symptoms,
			init(DiseasePriority $priority = new DiseasePriority(6);),
			action($priority.addSymptom();),
			result($priority)
		)
		
		
	then
		modify($mr){setDisease($d);}
		System.out.println("Detektovana bolest: Sinusna infekcija - specijalni zahtev");
end

rule "Hipertenzija"
	no-loop
	salience 20
	when
		$d: Disease(name == "Hipertenzija")
		$mr: MedicalRecord(disease == null)
		$p: Patient($records: records)
		$tc: TimeCheck()
		
		Number(intValue >= 10) from accumulate(
			$r: MedicalRecord (
				date >= $tc.last6Months()
			) from $records,
			init(int count = 0;),
			action(count++;),
			result(count)
		)
	then
		modify($mr){setDisease($d);}
		System.out.println("Detektovana bolest: Hipertenzija");
end

rule "Dijabetes"
	no-loop
	salience 20
	when 
		$d: Disease(name == "Dijabetes")
		$mr: MedicalRecord(disease == null, $symptoms: symptoms)
		Number(intValue >= 4) from accumulate(
			$s: Symptom (
				name == "Cesto uriniranje" ||
				name == "Gubitak telesne tezine" ||
				name == "Zamor" ||
				name == "Mucnina i povracanje"
			) from $symptoms,
			init(int count = 0;),
			action(count++;),
			result(count)
		)
	then
	modify($mr){setDisease($d);}
	System.out.println("Detektovana bolest: Dijabetes");
end

rule "Hronicna bubrezna bolest"
	no-loop
	salience 25
	when
		$d: Disease(name == "Hronicna bubrezna bolest")
		$mr: MedicalRecord(disease == null, $symptoms: symptoms)
		$p: Patient($records: records)
		$tc: TimeCheck()
		$h: Disease(name == "Hipertenzija")
		$db: Disease(name == "Dijabetes")
		Number(intValue >= 2) from accumulate(
			$s: Symptom (
				name == "Zamor" ||
				name == "Nocturia" ||
				name == "Otoci nogu i zglobova" ||
				name == "Gusenje" ||
				name == "Bol u grudima"
			) from $symptoms,
			init(int count = 0;),
			action(count++;),
			result(count)
		)
		
		Number(intValue >= 1) from accumulate(
			$r: MedicalRecord (
				(disease == $h && date <= $tc.last6Months()) ||
				disease == $db
			) from $records,
			init(int count = 0;),
			action(count++;),
			result(count)
		)
	then
		modify($mr){setDisease($d);}
		System.out.println("Detektovana bolest: Hronicna bubrezna bolest");
end

rule "Akutna bubrezna povreda"
	no-loop
	salience 25
	when
		$d: Disease(name == "Akutna bubrezna povreda")
		$mr: MedicalRecord(disease == null, $symptoms: symptoms)
		$p: Patient($records: records)
		$tc: TimeCheck()
		
		Number(intValue >= 2) from accumulate(
			$s: Symptom (
				name == "Zamor" ||
				name == "Gusenje" ||
				name == "Otoci nogu i zglobova" ||
				name == "Dijareja"
			) from $symptoms,
			init(int count = 0;),
			action(count++;),
			result(count)
		)
		
		(Number(intValue >= 1) from accumulate(
			$r: MedicalRecord(
				(disease.getSymptoms() contains new Symptom("Temperatura veca od 38C") ||
				disease.getSymptoms() contains new Symptom("Temperatura od 40C do 41C")) &&
				date >= $tc.last14Days()
			) from $records,
			init(int count = 0;),
			action(count++;),
			result(count)
		))
		or
		(Number(intValue >= 1) from accumulate(
			$r: MedicalRecord(
				medicine != null &&
				medicine.getType() == "ANTIBIOTIC" && 
				date >= $tc.last21Day()
			) from $records,
			init(int count = 0;),
			action(count++;),
			result(count)
		))
	then
		modify($mr){setDisease($d);}
		System.out.println("Detektovana bolest: Akutna bubrezna povreda");
end
		

/*rule "Sinusna infekcija (sa specijalnim zahtevom)"
	no-loop
	lock-on-active true
	salience ($sdc.getSalienceSinusInfectionSpecial())
	when
		$d : Disease( name == "Sinusna infekcija" )
		$cold : Disease( name == "Prehlada" )
		$fever : Disease( name == "Groznica" )
		$patient : Patient(  $records : records )
		$mr : MedicalRecord (disease == null , $symptoms: symptoms)
		$last60days: Last60Days()
		
		
		Number(intValue >= 1) from accumulate (
			$oldDiag: MedicalRecord( disease == $cold  || disease == $fever, date >= $last60days ) from $records,
			init(int count = 0;),
			action(count++;),
			result(count)
		)
		
		$sdc : DiseaseCheckerSI( $s : salience>=3 ) from accumulate(
			$symptom : Symptom (
				name == "Oticanje oko ociju" ||
				name == "Glavobolja" ||
				name == "Zuti sekret iz nosa" ||
				name == "Bol u grlu" ||
				name == "Temperatura veca od 38C" ||
				name == "Kasalj"
				
			) from $symptoms,			
            init(DiseaseCheckerSI $salCheck = new DiseaseCheckerSI(7);),
            action($salCheck.addSymptom();),
            result($salCheck)
			
		)
	then
		modify($mr) {setDisease($d);} 
		System.out.println("Dijagnoza: sinusna infekcija (sa specijalnim zahtevom): zadovoljeno " + $sdc.getSalienceSinusInfectionSpecial() + " od " + $sdc.getMaxSymptomNum() + " simptoma.");
end


rule "Hipertenzija"
	no-loop
	lock-on-active
	when
		$d: Disease(name == "Hipertenzija")
		$patient: Patient($records: records)
		$mr: MedicalRecord($symptoms: symptoms, disease == null)
		$last6Months: Last6Months()
		
		$rightTimeSymptoms: List() from accumulate(
			MedicalRecord(date >= $last6Months, $currSymptoms: symptoms) from $records,
			init(List symptomList = new ArrayList<>();),
			action(symptomList.addAll($currSymptoms);)
			result(symptomList)
		)
		$symptomNum: Number(intValue >= 10) from accumulate(
			Symptom(name == "Visok pritisak") from $rightTimeSymptoms,
			init(int count = 0;),
			action(count++;),
			result(count)
		)
			
	then
		modify($mr) {setDisease($d);}
		System.out.println("Dijagnoza: hipertenzija, u poslednjih 6 meseci pritisak je bio povisen " + $symptomNum + " puta.");
end


rule "Dijabetes"
    no-loop
	lock-on-active true
    when
        $d : Disease( name == "diabetes")
		$mr : MedicalRecord (disease == null , $symptoms: symptoms)
		Number(intValue >=4) from accumulate(
            $symptom: Symptom(
            	name == "Cesto uriniranje"	||
            	name == "Gubitak telesne tezine" 	||
            	name == "Zamor"	 ||
            	name == "Mucnina i povracanje" 	  		 		  		 	
            ) from $symptoms,
            init(int count = 0;),
            action(count++;),
            result(count)
        )
				
	then
		modify($mr) {setDisease($d);}
		System.out.println("Dijagnoza: dijabetes");

end


rule "Hronicna bubrezna bolest"
	when
		$d: Disease(name == "Hronicna bubrezna bolest")
		$hypertension: Disease(name == "Hipertenzija")
		$diabetes: Disease(name == "Dijabetes")
		$patient: Patient($records: records)
		$mr: MedicalRecord($symptoms: symptoms, disease == null)
		$last6Months: Last6Months()


		Number(intValue >= 2) from accumulate(
			Symptom(name == "Zamor"
				 || name == "Nocturia"
				 || name == "Otoci nogu i zglobova"
				 || name == "Gusenje"
				 || name == "Bol u grudima") from $symptoms,
			init(int count = 0;),
			action(count++;),
			result(count)
		
		)
		and
		(
			Number(intValue >= 1) from accumulate(
				MedicalRecord(date <= $last6Months, disease == $hypertension) from $records,
				init(int count = 0;),
				action(count++;),
				result(count)		
			)
			or 
			Number(intValue >= 1) from accumulate(
				MedicalRecord(disease == $diabetes) from $records,
				init(int count = 0;),
				action(count++;),
				result(count)
			)
		)
		
	then
		modify($mr) {setDisease($d);}
		System.out.println("Dijagnoza: hronicna bubrezna bolest");
end




rule "Akutna bubrezna povreda"
	when
		$d: Disease(name == "Akutna bubrezna povreda")
		$patient : Patient(  $records : records )
		$mr: MedicalRecord($symptoms: symptoms, disease == null)

			
		Number(intValue >= 2) from accumulate(
			Symptom(name == "Zamor"
				 || name == "Gusenje"
				 || name == "Otoci nogu i zglobova"
				 || name == "Dijareja") from $symptoms,
			init(int count = 0;),
			action(count++;),
			result(count)
		)
		and 
		(
            ( 
                Number(intValue >= 1) from accumulate(
                			Symptom(name == "Oporavljanje od operacije") from $symptoms,
                			init(int count = 0;),
                			action(count++;),
                			reverse(count--;),
                			result(count)
                		)
            )            
            or (
                $last14Days: Last14Days()
                and
				$past14DaysSymptoms: List() from accumulate(
					MedicalRecord(date >= $last14Days, $pasDis: disease != null) from $records,
					init(List pasSymps = new ArrayList<>(); ),
					action(pasSymps.addAll($pasDis.getSymptoms());),
					result(pasSymps)
				)
				and
				Number(intValue >= 1) from accumulate(
					Symptom(name == "Temperatura veca od 38C"
					     || name == "Temperatura od 40C do 41C") from $past14DaysSymptoms,
					init(int count = 0;),
					action(count++;),
					result(count)
				)
            )		
            or
            (
                $last21Days: Last21Days()
                and
            	$past: List() from accumulate(
            		MedicalRecord(date >= $last21Days, disease != null, $pastDrugs: medicine) from $records,
            		init(List pastDrugs = new ArrayList<>();),
            		action(pastDrugs.addAll($pastDrugs);),
            		result(pastDrugs)
            	)
            	and
            	Number(intValue >= 1) from accumulate(
            		Medicine(type == "ANTIBIOTIC") from $past,
            		init(int count = 0;),
            		action(count++;),
            		result(count)
            	)
            
            ) 
            
		)	
	
	then
		modify($mr) {setDisease($d);}
		System.out.println("Dijagnoza: akutna bubrezna povreda");	
end*/




